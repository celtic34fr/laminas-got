<?php

function formatWidthBT($val)
{
    // TODO: tester l'insertion d'offset
    // TODO: voir l'ajout des class CSS col-chiffre et offset-chiffre
    if (empty($val)) {
        return false;
    }

    $rlt = [];
    $rlt["WX"] = $rlt["WS"] = $rlt["WM"] = $rlt["WL"] = 0;
    $rlt["OX"] = $rlt["OS"] = $rlt["OM"] = $rlt["OL"] = 0;
    $prefixes = ["WX", "WS", "WM", "WL", "OX", "OS", "OM", "OL"];

    if (is_numeric($val) and (int)$val <= 12) {
        $rlt["WX"] = $rlt["WS"] = $rlt["WM"] = $rlt["WL"] = (int)$val;
    } else {
        foreach (explode(':', $val) as $item) {
            $key = strtoupper($item);
            $prefix = substr($key, 0, 2);
            if (in_array($prefix, $prefixes)) {
                $rlt[$prefix] = (int)substr($key, 2);
            } elseif (in_array($key[0], ["W", "O"])) {
                $rlt[$key[0]."L"] = (int)substr($key, 1);
                $rlt[$key[0]."M"] = $rlt[$key[0]."S"] = $rlt[$key[0]."X"] = $rlt[$key[0]."L"];
            }
        }
    }

    foreach ($val as $key=>$value) {
        if (!$value) { unset($rlt[$key]); }
    }

    if (!empty($val)) {
        return implode(':', $val);
    }

    return $val;
}

function formatWidthBTstr($val)
{
    $colsWidthBT = formatWidthBT($val);
    $chaine = "";

    if (array_key_exists('llg', $colsWidthBT)) {
        $chaine .= 'col-lg-' . $colsWidthBT['llg'] . ' ';
    }
    if (array_key_exists('lmd', $colsWidthBT)) {
        $chaine .= 'col-md-' . $colsWidthBT['llg'] . ' ';
    }
    if (array_key_exists('lsm', $colsWidthBT)) {
        $chaine .= 'col-sm-' . $colsWidthBT['llg'] . ' ';
    }
    if (array_key_exists('lxs', $colsWidthBT)) {
        $chaine .= 'col-xs-' . $colsWidthBT['llg'] . ' ';
    }

    return $chaine;
}
